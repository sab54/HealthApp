// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tabs Component matches snapshot 1`] = `
<View
  onLayout={[Function]}
  style={
    {
      "marginBottom": 12,
    }
  }
>
  <RCTScrollView
    contentContainerStyle={
      [
        {
          "borderBottomWidth": 1,
          "borderRadius": 6,
          "flexDirection": "row",
          "justifyContent": "space-around",
          "overflow": "hidden",
          "position": "relative",
        },
        {
          "backgroundColor": "#fafafa",
          "borderColor": "#ddd",
        },
      ]
    }
    horizontal={false}
    showsHorizontalScrollIndicator={false}
  >
    <View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": true,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "minWidth": 80,
            "opacity": 1,
            "paddingVertical": 10,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontFamily": "Poppins",
                "fontSize": 14,
              },
              {
                "color": "#007AFF",
                "fontWeight": "600",
              },
            ]
          }
        >
          Home
        </Text>
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": false,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "minWidth": 80,
            "opacity": 1,
            "paddingVertical": 10,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontFamily": "Poppins",
                "fontSize": 14,
              },
              {
                "color": "#333",
                "fontWeight": "500",
              },
            ]
          }
        >
          Search
        </Text>
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": false,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "flex": 1,
            "minWidth": 80,
            "opacity": 1,
            "paddingVertical": 10,
          }
        }
      >
        <Text
          style={
            [
              {
                "fontFamily": "Poppins",
                "fontSize": 14,
              },
              {
                "color": "#333",
                "fontWeight": "500",
              },
            ]
          }
        >
          Profile
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
